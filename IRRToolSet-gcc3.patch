--- IRRToolSet-4.7.3/src/aoe/TclApp.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclApp.cc	Tue Jul  8 17:28:05 2003
@@ -71,8 +71,8 @@
 
 // Constructor
 TclApplication::TclApplication(char *pzcAppName, char *pzcDisplay, 
-			       char *pzcDefaultResource = NULL, 
-			       char *pzcResourceFile = NULL) 
+			       char *pzcDefaultResource /* = NULL */, 
+			       char *pzcResourceFile /* = NULL */) 
    : ptMainWindow(NULL),
      pzcDisplay(pzcDisplay),
      pzcDefaultResource(pzcDefaultResource),
@@ -176,16 +176,16 @@
    return 1;
 }
 
-char *TclApplication::setVar(char *pzcName, char *pzcValue, 
-			   int iFlags = TCL_GLOBAL_ONLY)
+const char *TclApplication::setVar(char *pzcName, char *pzcValue, 
+			   int iFlags /* = TCL_GLOBAL_ONLY */)
 {
    SplitName cName(pzcName);
    return Tcl_SetVar2(ptInterp, cName.name1(), cName.name2(), 
 		      pzcValue, iFlags);
 }
 
-char *TclApplication::setVar(char *pzcName, int iValue, 
-			     int iFlags = TCL_GLOBAL_ONLY)
+const char *TclApplication::setVar(char *pzcName, int iValue, 
+			     int iFlags /* = TCL_GLOBAL_ONLY */)
 {
    SplitName cName(pzcName);
    char pzcBuffer[64];
@@ -194,7 +194,7 @@
 		      pzcBuffer, iFlags);
 }
 
-char *TclApplication::getVar(char *pzcName, int iFlags = TCL_GLOBAL_ONLY)
+const char *TclApplication::getVar(char *pzcName, int iFlags /* = TCL_GLOBAL_ONLY */)
 {
    SplitName cName(pzcName);
    return Tcl_GetVar2(ptInterp, cName.name1(), cName.name2(), iFlags);
--- IRRToolSet-4.7.3/src/aoe/TclEntry.hh.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclEntry.hh	Tue Jul  8 17:32:28 2003
@@ -74,7 +74,7 @@
 	return setValue(pzcValue);
 	}
      int setValue(char *pzcValue);
-     char *getValue(void);
+     const char *getValue(void);
 };
 
 #endif // TCLENTRY_HH
--- IRRToolSet-4.7.3/src/aoe/TclToggleButton.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclToggleButton.cc	Tue Jul  8 17:34:55 2003
@@ -67,7 +67,7 @@
 
 TclToggleButton::TclToggleButton(char *pzcName, char *pzcUnCheckString, 
 				 char *pzcCheckString, 
-				 tdCheckButtonOption eOption = cbUnCheck) :
+				 tdCheckButtonOption eOption /* = cbUnCheck */) :
   TclCheckButton(pzcName, eOption)
 {
   this->pzcUnCheckString = strdup(pzcUnCheckString);
@@ -104,7 +104,7 @@
 
 // Static member function
 char *TclToggleButton::traceProc(ClientData pvData, Tcl_Interp *pcInterp, 
-				 char *pzcName1, char *pzcName2, int iFlags)
+				 const char *pzcName1, const char *pzcName2, int iFlags)
 {
   TclToggleButton *pcToggleButton = (TclToggleButton *)pvData;
   return pcToggleButton->traceProc();
--- IRRToolSet-4.7.3/src/aoe/TclToggleButton.hh.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclToggleButton.hh	Tue Jul  8 17:34:24 2003
@@ -67,7 +67,7 @@
   private:
     int label(char *pzcLabel);
     static char *traceProc(ClientData pvData, Tcl_Interp *pcInterp, 
-			   char *pzcName1, char *pzcName2, int iFlags);
+			   const char *pzcName1, const char *pzcName2, int iFlags);
 
   protected:
     char *traceProc(void);
--- IRRToolSet-4.7.3/src/aoe/TclVar.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclVar.cc	Tue Jul  8 17:35:46 2003
@@ -129,7 +129,7 @@
   Tcl_SetVar2(pcApp->getInterp(), pzcName1, pzcName2, pzcValue, 0); 
 }
 
-char *TclVariable::getValue(char *pzcDummy = NULL)
+const char *TclVariable::getValue(char *pzcDummy /* = NULL */)
 {
   TclApplication *pcApp = (TclApplication *)getExtraArgument();
   return Tcl_GetVar2(pcApp->getInterp(), pzcName1, pzcName2, 0);
@@ -146,6 +146,6 @@
 
 int TclInt::getValue(void)
 {
-  char *pzcBuffer = TclVariable::getValue();
+  const char *pzcBuffer = TclVariable::getValue();
   return atoi(pzcBuffer);
 }
--- IRRToolSet-4.7.3/src/aoe/TclApp.hh.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclApp.hh	Tue Jul  8 17:27:56 2003
@@ -91,10 +91,10 @@
       char *getResourceFile(void) { return pzcResourceFile; }
       void setResult(char *pzcResult) { ptInterp->result = pzcResult; }
       const char *getResult(void) { return ptInterp->result; }
-      char *setVar(char *pzcName, char *pzcValue, 
+      const char *setVar(char *pzcName, char *pzcValue, 
 		   int iFlags = TCL_GLOBAL_ONLY);
-      char *setVar(char *pzcName, int iValue, int iFlags = TCL_GLOBAL_ONLY);
-      char *getVar(char *pzcName, int iFlags = TCL_GLOBAL_ONLY);
+      const char *setVar(char *pzcName, int iValue, int iFlags = TCL_GLOBAL_ONLY);
+      const char *getVar(char *pzcName, int iFlags = TCL_GLOBAL_ONLY);
       int createCommand(TclCommand *pcCommand);
       int insert(TclObject *pcObject);
 };
--- IRRToolSet-4.7.3/src/aoe/TclCmd.hh.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclCmd.hh	Tue Jul  8 17:31:47 2003
@@ -62,11 +62,11 @@
 {
    private:
       static int command(ClientData ptData, Tcl_Interp *ptInterp,
-			 int argc, char *argv[]);
+			 int argc, const char *argv[]);
       static void cleanUp(ClientData ptData);
 
    protected:
-      virtual int command(int argc, char *argv[]) = 0;
+      virtual int command(int argc, const char *argv[]) = 0;
       virtual void cleanUp(void) { delete this; }
 
    public:
--- IRRToolSet-4.7.3/src/aoe/TclCheckButton.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclCheckButton.cc	Tue Jul  8 17:30:14 2003
@@ -103,7 +103,7 @@
 {
    TclApplication *pcApp = (TclApplication *)getExtraArgument();
    if (!pcApp) return -1;
-   char *pzcBuffer;
+   const char *pzcBuffer;
    if ((pzcBuffer = pcApp->getVar(pzcVariableName)) == NULL) return -1;
    return atoi(pzcBuffer);
 }
--- IRRToolSet-4.7.3/src/aoe/TclCmd.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclCmd.cc	Tue Jul  8 17:31:35 2003
@@ -63,7 +63,7 @@
 
 
 int TclCommand::command(ClientData ptData, Tcl_Interp *ptInterp,
-			int argc, char *argv[])
+			int argc, const char *argv[])
 {
    TclCommand *pcTclCommand = (TclCommand *)ptData;
    return(pcTclCommand->command(argc, argv));
--- IRRToolSet-4.7.3/src/aoe/TclEntry.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclEntry.cc	Tue Jul  8 17:32:20 2003
@@ -91,7 +91,7 @@
    return 1;   
 }
 
-char *TclEntry::getValue(void)
+const char *TclEntry::getValue(void)
 {
    TclApplication *pcApp = (TclApplication *)getExtraArgument();
    if (!pcApp) return NULL;
--- IRRToolSet-4.7.3/src/aoe/TclRadioButton.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclRadioButton.cc	Tue Jul  8 17:32:47 2003
@@ -96,7 +96,7 @@
 {
    TclApplication *pcApp = (TclApplication *)getExtraArgument();
    if (!pcApp) return -1;
-   char *pzcBuffer;
+   const char *pzcBuffer;
    if ((pzcBuffer = pcApp->getVar(pzcVariableName)) == NULL) return -1;
    return atoi(pzcBuffer);   
 }
--- IRRToolSet-4.7.3/src/aoe/TclVar.hh.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/TclVar.hh	Tue Jul  8 17:35:35 2003
@@ -84,7 +84,7 @@
       ~TclVariable(void);
       virtual int setExtraArgument(void *pvExtraArgument);
       void setValue(char *pzcValue);
-      char *getValue(char *pzcDummy = NULL);
+      const char *getValue(char *pzcDummy = NULL);
 };
 
 
--- IRRToolSet-4.7.3/src/roe/roe_tcl.cc.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/roe_tcl.cc	Tue Jul  8 17:05:13 2003
@@ -148,7 +148,7 @@
 extern int irr_pending_replies;
 
 int roe_statusbar_hint(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
   if (argc != 1) {
     Tcl_SetResult(interp, "wrong # of args", TCL_STATIC);
     return TCL_ERROR;
@@ -165,13 +165,13 @@
 static int roe_routes_hint_index = -1;
 
 int roe_routes_hint_reset(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
   roe_routes_hint_index = -1;
   return TCL_OK;
 }
 
 int roe_routes_hint(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
   if (argc != 4) {
     Tcl_SetResult(interp, "wrong # of args", TCL_STATIC);
     return TCL_ERROR;
@@ -198,7 +198,7 @@
 }
 
 int roe_file_new_as(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
   switch (argc)
     {
     case 1:
@@ -221,7 +221,7 @@
 }
 
 int roe_show_routes(ClientData clientData, Tcl_Interp *interp, 
-			 int argc, char **argv) {
+			 int argc, const char **argv) {
    if (argc != 1) {
       Tcl_SetResult(interp, "wrong # of args", TCL_STATIC);
       return TCL_ERROR;
@@ -233,7 +233,7 @@
 }
 
 int roe_select_route(ClientData clientData, Tcl_Interp *interp, 
-		       int argc, char **argv) {
+		       int argc, const char **argv) {
    if (argc != 2) {
       Tcl_SetResult(interp, "wrong # of args", TCL_STATIC);
       return TCL_ERROR;
@@ -245,7 +245,7 @@
 }
 
 int roe_show_object(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
 
    if (argc != 4) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -260,7 +260,7 @@
 }
 
 int roe_read_bgp_dump(ClientData clientData, Tcl_Interp *interp, 
-		      int argc, char **argv) {
+		      int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -273,7 +273,7 @@
 }
 
 int roe_object_delete(ClientData clientData, Tcl_Interp *interp, 
-		      int argc, char **argv) {
+		      int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -286,7 +286,7 @@
 }
 
 int roe_object_add(ClientData clientData, Tcl_Interp *interp, 
-		   int argc, char **argv) {
+		   int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -299,7 +299,7 @@
 }
 
 int roe_object_update(ClientData clientData, Tcl_Interp *interp, 
-		      int argc, char **argv) {
+		      int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -312,7 +312,7 @@
 }
 
 int roe_object_schedule(ClientData clientData, Tcl_Interp *interp, 
-			int argc, char **argv) {
+			int argc, const char **argv) {
 
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -325,7 +325,7 @@
 }
 
 int roe_select_transaction(ClientData clientData, Tcl_Interp *interp, 
-			   int argc, char **argv) {
+			   int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -338,7 +338,7 @@
 }
 
 int roe_cancel_transaction(ClientData clientData, Tcl_Interp *interp, 
-			   int argc, char **argv) {
+			   int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -352,7 +352,7 @@
 }
 
 int roe_add_selected(ClientData clientData, Tcl_Interp *interp, 
-		     int argc, char **argv) {
+		     int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -365,7 +365,7 @@
 }
 
 int roe_del_selected(ClientData clientData, Tcl_Interp *interp, 
-		int argc, char **argv) {
+		int argc, const char **argv) {
 
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -378,7 +378,7 @@
 }
 
 int roe_del_selected_matching_source(ClientData clientData, Tcl_Interp *interp, 
-		int argc, char **argv) {
+		int argc, const char **argv) {
 
    if (argc != 3) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -391,7 +391,7 @@
 }
 
 int roe_config_tmpl(ClientData clientData, Tcl_Interp *interp, 
-	       int argc, char **argv) {
+	       int argc, const char **argv) {
 
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -404,7 +404,7 @@
 }
 
 int roe_config_tmpl_apply(ClientData clientData, Tcl_Interp *interp, 
-		     int argc, char **argv) {
+		     int argc, const char **argv) {
 
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -417,7 +417,7 @@
 }
 
 int roe_config_irr(ClientData clientData, Tcl_Interp *interp, 
-	       int argc, char **argv) {
+	       int argc, const char **argv) {
 
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -430,7 +430,7 @@
 }
 
 int roe_config_irr_apply(ClientData clientData, Tcl_Interp *interp, 
-		     int argc, char **argv) {
+		     int argc, const char **argv) {
 
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -443,7 +443,7 @@
 }
 
 int roe_config_revert(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
    
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -456,7 +456,7 @@
 }
 
 int roe_config_load(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
    
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -469,7 +469,7 @@
 }
 
 int roe_config_save(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
    
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -482,7 +482,7 @@
 }
 
 int roe_get_more_specifics(ClientData clientData, Tcl_Interp *interp, 
-			   int argc, char **argv) {
+			   int argc, const char **argv) {
    
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -495,7 +495,7 @@
 }
 
 int roe_get_less_specifics(ClientData clientData, Tcl_Interp *interp, 
-			   int argc, char **argv) {
+			   int argc, const char **argv) {
    
    if (argc != 2) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
@@ -508,7 +508,7 @@
 }
 
 int roe_update_irr(ClientData clientData, Tcl_Interp *interp, 
-		    int argc, char **argv) {
+		    int argc, const char **argv) {
    
    if (argc != 1) {
       Tcl_SetResult (interp, "wrong # of args", TCL_STATIC);
--- IRRToolSet-4.7.3/src/roe/object.hh.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/object.hh	Tue Jul  8 17:07:33 2003
@@ -59,7 +59,7 @@
 
 class RoeObject {
 public:
-   void display(char *dbase, ASt as, char *rt);
+   void display(const char *dbase, ASt as, const char *rt);
    void del(int index);
    void add(int index);
    void upd(int index);
--- IRRToolSet-4.7.3/src/roe/route-list.hh.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/route-list.hh	Tue Jul  8 17:11:06 2003
@@ -172,9 +172,9 @@
 
    void init(void);
    void load(ASt _as);
-   void read_bgp_dump(char *fname);
-   void get_more_specifics(char *selection);
-   void get_less_specifics(char *selection);
+   void read_bgp_dump(const char *fname);
+   void get_more_specifics(const char *selection);
+   void get_less_specifics(const char *selection);
 
    Route *operator() (int index) {
       return vrdisplayed[index];
--- IRRToolSet-4.7.3/src/roe/schedule.hh.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/schedule.hh	Tue Jul  8 17:10:33 2003
@@ -90,9 +90,9 @@
    void add();
    void select(int index);
    void cancel(int index);
-   void add_selected(char *selection);
-   void del_selected(char *selection);
-   void del_selected_matching_source(char *selection, char *dbase);
+   void add_selected(const char *selection);
+   void del_selected(const char *selection);
+   void del_selected_matching_source(const char *selection, const char *dbase);
    void update_irr();
 private:
    void add_internal(char *text);
--- IRRToolSet-4.7.3/src/roe/object.cc.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/object.cc	Tue Jul  8 17:13:24 2003
@@ -69,7 +69,7 @@
    tcl_Eval(".object.text configure -state disabled");
 }
 
-void RoeObject::display(char *dbase, ASt as, char *rt) {
+void RoeObject::display(const char *dbase, ASt as, const char *rt) {
    Route *route = NULL;
 
    tcl_Eval(".object.text configure -state normal");
@@ -88,7 +88,7 @@
    whois->SetSources(dbase);
    // Modified by wlee@isi.edu
    //   int code = whois->QueryResponse(buffer, "!mrt,%s-AS%d", rt, as);
-   whois->getRoute(route, rt, as);
+   whois->getRoute(route, (char*)rt, as);
 
    whois->SetSources();
 
--- IRRToolSet-4.7.3/src/roe/route-list.cc.orig	Tue Jun 18 13:00:11 2002
+++ IRRToolSet-4.7.3/src/roe/route-list.cc	Tue Jul  8 17:14:50 2003
@@ -523,7 +523,7 @@
    get_registrations_init(rlist.head());
 }
 
-void RouteList::read_bgp_dump(char *fname) {
+void RouteList::read_bgp_dump(const char *fname) {
    char r[1024];
    char *status;
    Pix rpix;
@@ -605,7 +605,7 @@
    return true;
 }
 
-void RouteList::get_more_specifics(char *selection) {
+void RouteList::get_more_specifics(const char *selection) {
    RouteList::Route *vr;
    Route *tail;
 
@@ -613,7 +613,7 @@
 
    tail = rlist.tail();
 
-   for (char *s = strtok(selection, " \t"); s; s = strtok(NULL, " \t")) {
+   for (char *s = strtok((char*)selection, " \t"); s; s = strtok(NULL, " \t")) {
       vr = vrdisplayed[atoi(s)];
       RadixNode *rdnode = irr_radix->find(&vr->route);
       if (rdnode) {
@@ -661,7 +661,7 @@
       get_more_specifics_add(rdnode->rght);
 }
 
-void RouteList::get_less_specifics(char *selection) {
+void RouteList::get_less_specifics(const char *selection) {
    RouteList::Route *vr;
    Route *tail;
    RadixNode *irr_node;
@@ -671,7 +671,7 @@
 
    tail = rlist.tail();
 
-   for (char *s = strtok(selection, " \t"); s; s = strtok(NULL, " \t")) {
+   for (char *s = strtok((char*)selection, " \t"); s; s = strtok(NULL, " \t")) {
       vr = vrdisplayed[atoi(s)];
       irr_node = irr_radix->find(&vr->route);
       node     = radix.find(&vr->route);
--- IRRToolSet-4.7.3/src/roe/schedule.cc.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/schedule.cc	Tue Jul  8 17:15:43 2003
@@ -170,11 +170,11 @@
    tcl_Eval(".object.text configure -state disabled");
 }
 
-void Schedule::add_selected(char *selection) {
+void Schedule::add_selected(const char *selection) {
    RouteList::Route *r;
    char buffer[64];
 
-   for (char *s = strtok(selection, " \t"); s; s = strtok(NULL, " \t")) {
+   for (char *s = strtok((char*)selection, " \t"); s; s = strtok(NULL, " \t")) {
       r = routelist(atoi(s));
 
       tcl_Eval("set AS AS%d", routelist.as);
@@ -186,12 +186,12 @@
    }
 }
 
-void Schedule::del_selected(char *selection) {
+void Schedule::del_selected(const char *selection) {
    RouteList::Route *r;
    RouteList::Route::db_as *p;
    Route *route = NULL;
 
-   for (char *s = strtok(selection, " \t"); s; s = strtok(NULL, " \t")) {
+   for (char *s = strtok((char*)selection, " \t"); s; s = strtok(NULL, " \t")) {
       r = routelist(atoi(s));
       for (p = r->db_as_l.head(); p; p = r->db_as_l.next(p)) {
 	 // Modified by wlee@isi.edu
@@ -227,12 +227,12 @@
    }
 }
 
-void Schedule::del_selected_matching_source(char *selection, char *dbase) {
+void Schedule::del_selected_matching_source(const char *selection, const char *dbase) {
    RouteList::Route *r;
    RouteList::Route::db_as *p;
    Route *route = NULL;
 
-   for (char *s = strtok(selection, " \t"); s; s = strtok(NULL, " \t")) {
+   for (char *s = strtok((char*)selection, " \t"); s; s = strtok(NULL, " \t")) {
       r = routelist(atoi(s));
       for (p = r->db_as_l.head(); p; p = r->db_as_l.next(p)) {
 	 if (!strcmp(dbase, p->db)) {
--- IRRToolSet-4.7.3/src/roe/roe_config.cc.orig	Tue Apr  9 13:48:48 2002
+++ IRRToolSet-4.7.3/src/roe/roe_config.cc	Tue Jul  8 17:17:16 2003
@@ -182,12 +182,11 @@
 }
 
 void Configure::config_tmpl() {
-   tcl_Eval("
-if {[winfo exists .config_tmpl]} {
-   wm deiconify .config_tmpl
-   set a 1
-} else {set a 0} 
-");
+   tcl_Eval("\n"
+"if {[winfo exists .config_tmpl]} {\n"
+"   wm deiconify .config_tmpl\n"
+"   set a 1\n"
+"} else {set a 0} \n");
 
    if (*(interp->result) != '0') // already displaying a config window
       return;
@@ -218,12 +217,11 @@
 }
 
 void Configure::config_irr() {
-   tcl_Eval("
-if {[winfo exists .config_irr]} {
-   wm deiconify .config_irr
-   set a 1
-} else {set a 0} 
-");
+   tcl_Eval("\n"
+"if {[winfo exists .config_irr]} {\n"
+"   wm deiconify .config_irr\n"
+"   set a 1\n"
+"} else {set a 0} \n");
 
    if (*(interp->result) != '0') // already displaying a config window
       return;
@@ -236,11 +234,11 @@
 #endif // LOAD_FILE
 
    for (int i = 0; *dbupdate[i].source; ++i) 
-      tcl_Eval("label .config_irr.source.label.x%s -text %s:
-entry .config_irr.source.entry.x%s -relief sunken -bd 2 -width 30
-pack .config_irr.source.label.x%s -side top -anchor e -ipady 3 -expand true
-pack .config_irr.source.entry.x%s -side top -fill both -expand 1 -pady 1 -padx 1
-.config_irr.source.entry.x%s insert 0 {%s}", 
+      tcl_Eval("label .config_irr.source.label.x%s -text %s:\n"
+"entry .config_irr.source.entry.x%s -relief sunken -bd 2 -width 30\n"
+"pack .config_irr.source.label.x%s -side top -anchor e -ipady 3 -expand true\n"
+"pack .config_irr.source.entry.x%s -side top -fill both -expand 1 -pady 1 -padx 1\n"
+".config_irr.source.entry.x%s insert 0 {%s}", 
 	       dbupdate[i].source, dbupdate[i].source, dbupdate[i].source, 
 	       dbupdate[i].source, dbupdate[i].source, dbupdate[i].source, 
 	       dbupdate[i].update);
--- IRRToolSet-4.7.3/src/aoe/aoe.hh.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/aoe.hh	Wed Jul  9 09:54:31 2003
@@ -77,7 +77,7 @@
 class ListPeer : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    private:
       int updateWindowTitle(TclApplication *pcApp, int iCategory, 
@@ -105,7 +105,7 @@
 class LoadBgpDump : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       LoadBgpDump(char *pzcName) : TclCommand(pzcName) {}
@@ -115,7 +115,7 @@
 class UpdatePolicy : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    private:
       int append(void);
@@ -139,7 +139,7 @@
 class EditPolicyText : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       EditPolicyText(char *pzcName) : TclCommand(pzcName) {} 
@@ -148,7 +148,7 @@
 class ShowPolicyText : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       ShowPolicyText(char *pzcName) : TclCommand(pzcName) {}
@@ -157,7 +157,7 @@
 class FileOpen : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       FileOpen(char *pzcName) : TclCommand(pzcName) {} 
@@ -166,7 +166,7 @@
 class FileSave : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       FileSave(char *pzcName) : TclCommand(pzcName) {} 
@@ -175,7 +175,7 @@
 class ListSave : public TclCommand // katie@ripe.net for peers save
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       ListSave(char *pzcName) : TclCommand(pzcName) {} 
@@ -184,7 +184,7 @@
 class FileRevert : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       FileRevert(char *pzcName) : TclCommand(pzcName) {} 
@@ -193,7 +193,7 @@
 class FilePrint : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       FilePrint(char *pzcName) : TclCommand(pzcName) {} 
@@ -203,7 +203,7 @@
 class AddPeer : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       AddPeer(char *pzcName) : TclCommand(pzcName) {} 
@@ -213,7 +213,7 @@
 class DeletePeer: public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       DeletePeer(char *pzcName) : TclCommand(pzcName) {} 
@@ -223,7 +223,7 @@
 class CreatePolicyTemplateMenu : public TclCommand
 {
    protected:
-      virtual int command(int argc, char *argv[]);
+      virtual int command(int argc, const char *argv[]);
 
    public:
       CreatePolicyTemplateMenu(char *pzcName) : TclCommand(pzcName) {} 
--- IRRToolSet-4.7.3/src/aoe/aoe.cc.orig	Tue Apr  9 13:48:46 2002
+++ IRRToolSet-4.7.3/src/aoe/aoe.cc	Wed Jul  9 09:56:04 2003
@@ -365,7 +365,7 @@
 int ListPeer::updateWindowTitle(TclApplication *pcTcl, int iCategory, 
 				char *pzcASNo)
 {
-   char *title, *dummy = "Shouldn't happen!";
+   const char *title, *dummy = "Shouldn't happen!";
    char pzcBuffer[128];
    AoeApplication *pcApp = (AoeApplication *)pcTcl;
    switch (iCategory)
@@ -566,7 +566,7 @@
       // import
       sprintf(pzcBuffer, "PolicyTemplate(%d,import)", iCategory - 4);
       ss << "import: "
-	 << substitute(pcApp->getVar(pzcBuffer), pzcMyAS, pzcPeerAS)
+	 << substitute((char*)pcApp->getVar(pzcBuffer), pzcMyAS, pzcPeerAS)
 	 << endl;
       }
    if (iExport)
@@ -574,7 +574,7 @@
       // export
       sprintf(pzcBuffer, "PolicyTemplate(%d,export)", iCategory - 4);
       ss << "export: "
-	 << substitute(pcApp->getVar(pzcBuffer), pzcMyAS, pzcPeerAS)
+	 << substitute((char*)pcApp->getVar(pzcBuffer), pzcMyAS, pzcPeerAS)
 	 << endl;
       }
    // Fill the text widget
@@ -626,7 +626,7 @@
    return pzcBuffer;
 }
 
-int ListPeer::command(int argc, char *argv[])
+int ListPeer::command(int argc, const char *argv[])
 {
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -723,7 +723,7 @@
 }
 
 
-int LoadBgpDump::command(int argc, char *argv[])
+int LoadBgpDump::command(int argc, const char *argv[])
 {
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -748,10 +748,10 @@
    return TCL_OK;
 }
 
-int UpdatePolicy::command(int argc, char *argv[])
+int UpdatePolicy::command(int argc, const char *argv[])
 {
    if (argc != 3) return TCL_ERROR;
-   char *pzcOption = argv[1];
+   const char *pzcOption = argv[1];
    int iTarget = atoi(argv[2]);
    int iResult = TCL_ERROR;
    if (strcmp(pzcOption, "append") == 0)
@@ -801,7 +801,7 @@
 }
 */
 
-int EditPolicyText::command(int argc, char *argv[])
+int EditPolicyText::command(int argc, const char *argv[])
 {
    if (argc != 1) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -819,7 +819,7 @@
    return TCL_OK;
 }
 
-int ShowPolicyText::command(int argc, char *argv[])
+int ShowPolicyText::command(int argc, const char *argv[])
 {
    if (argc != 1) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -867,7 +867,7 @@
    return TCL_OK;
 }
 
-int FileOpen::command(int argc, char *argv[])
+int FileOpen::command(int argc, const char *argv[])
 {
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -898,7 +898,7 @@
    return iResult;
 }
 
-int FileSave::command(int argc, char *argv[])
+int FileSave::command(int argc, const char *argv[])
 {
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -910,7 +910,7 @@
 }  
 
 // by katie@ripe.net for saving the peer list with status
-int ListSave::command(int argc, char *argv[])
+int ListSave::command(int argc, const char *argv[])
 {  
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -930,7 +930,7 @@
 }  
 
 
-int FileRevert::command(int argc, char *argv[])
+int FileRevert::command(int argc, const char *argv[])
 {
    if (argc != 1) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -945,10 +945,10 @@
    return TCL_OK;
 }
 
-int FilePrint::command(int argc, char *argv[])
+int FilePrint::command(int argc, const char *argv[])
 {   
    if (argc != 2) return TCL_ERROR;
-   char *pzcCommand = argv[1];
+   const char *pzcCommand = argv[1];
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
    const char *pzcText;
    int iLen;
@@ -972,7 +972,7 @@
 }
 
 
-int AddPeer::command(int argc, char *argv[])
+int AddPeer::command(int argc, const char *argv[])
 {
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -987,7 +987,7 @@
    return TCL_OK;
 }
 
-int DeletePeer::command(int argc, char *argv[])
+int DeletePeer::command(int argc, const char *argv[])
 {
    if (argc != 2) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -1041,7 +1041,7 @@
 }
 
 
-int CreatePolicyTemplateMenu::command(int argc, char *argv[])
+int CreatePolicyTemplateMenu::command(int argc, const char *argv[])
 {
    if (argc != 1) return TCL_ERROR;
    AoeApplication *pcApp = (AoeApplication *)getExtraArgument();
@@ -1049,14 +1049,14 @@
    for (int i = pcApp->pcCategoryButton->getSize(); i > 4; i--)
       pcApp->pcCategoryButton->del(i);
    // Create menu
-   char *pzcTotal = pcApp->getVar("PolicyTemplate(Total)");
+   const char *pzcTotal = pcApp->getVar("PolicyTemplate(Total)");
    if (pzcTotal)
       {
       for (int i = 0; i < atoi(pzcTotal); i++)
 	 {
 	 char pzcBuffer[256];
 	 sprintf(pzcBuffer, "PolicyTemplate(%d,Description)", i);
-	 if (!pcApp->pcCategoryButton->add(pcApp->getVar(pzcBuffer), 
+	 if (!pcApp->pcCategoryButton->add((char*)pcApp->getVar(pzcBuffer), 
 	      "listPeer [.body.aspeer.listbox.list curselection]"))
 	 return TCL_ERROR;
 	 }
